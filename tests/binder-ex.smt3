(declare-sort Int 0)

(declare-const P (-> Int Bool))
(declare-const forall (-> Bool Bool) :binder)

(declare-rule id ((y Bool)) :premises (y) :conclusion y)

(assume @p0 (forall ((x Int)) (P x)))
(assume @p2 (forall ((x Int)) false))


; should match
(step @p1 (forall ((x Int)) (P x)) :rule id :premises (@p0))

; wrong
; (step @p1 (forall ((z Int)) (P z)) :rule id :premises (@p0))


(declare-rule q-rule ((xs ?))
  :premises ((forall xs false))
  :conclusion false)

(step @p3 false :rule q-rule :premises (@p2))
